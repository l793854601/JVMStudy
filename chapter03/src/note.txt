JVM内存布局规定了Java在运行过程中内存申请、分配、管理的策略，保证了JVM的高效运行
不同的JVM对于内存的划分方式和管理机制存在着部分差异。

以HotSpot JVM为例，运行时数据区分为：
1.方法区（永久代、元空间）
2.堆
3.程序计数器
4.本地方法栈
5.虚拟机栈
其中：方法区、堆是线程共享的，程序计数器、本地方法栈、虚拟机栈是线程私有的

Runtime：
一个Java程序（JVM）对应一个Runtime，即为运行时环境，相当于运行时环境

JVM后台线程：
1.虚拟机线程
2.周期任务线程
3.GC线程
4.编译线程
5.信号调度线程

程序计数器（PC寄存器）：
这里并非是广义上所指的物理寄存器，或许将其翻译为PC计数器会更佳贴切。
JVM中的PC寄存器是对物理PC寄存器的一种抽象模拟。

作用：
PC寄存器用来存储指向下一条指令的地址，即将要执行的指令代码。由执行引擎读取下一条指令

特点：
1.它是一块很小的内存空间，也是运行速度最快的存储区域
2.在JVM规范中，每个县城都有它自己的程序计数器，是线程私有的，生命周期与线程的生命周期保持一致
3.任何时间一个线程都只有一个方法在执行，也就是“当前方法”，程序计数器会存储当前线程正在执行的Java方法的JVM指令地址。如果正在执行的是native方法，则是未指定值
*