堆的核心概念：
1.一个JVM实例只存在一个堆内存，堆也是Java内存管理的核心区域。
2.Java堆区在JVM祛痘的时候即被创建，其空间大小也就确定了。是JVM管理的最大一块内存空间（堆内存的大小是可以调节的）。
3.JVM规范中规定，堆可以处于物理上不连续的内存空间中，但在逻辑上它应该被视为连续的。
4.所有的线程共享Java堆，这里还可以划分线程私有的缓冲区（Thread Local Allocation Buffer，TLAB）。
5.JVM虚拟机规范中对Java堆的描述是：所有的对象实例以及数组都应当在运行时分配在堆上。从实际的角度看，“几乎”所有的对象实例都在堆中分配。
6.数组和对象可能永远不会存储在栈上，因为栈帧中保留引用，这个引用指向对象或者数组在堆中的位置。
7.在方法结束后，堆中的对象不会马上被移除，仅仅在垃圾回收的时候才会被移除。
8.堆，是GC执行垃圾回收的重点区域。























